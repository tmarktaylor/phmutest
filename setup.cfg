[metadata]
# This includes the license file(s) in the wheel.

# https://wheel.readthedocs.io/en/stable/user_guide.html#including-license-files-in-the-generated-wheel-file
license = MIT
license_files = LICENSE

# https://setuptools.readthedocs.io/en/latest/userguide/declarative_config.html
name = phmutest
version = 0.0.2
author = Mark Taylor
author_email = mark66547ta2@gmail.com
description = Detect broken Python examples in Markdown.
long_description = file: README.md, LICENSE
long_description_content_type = text/markdown
url= https://phmutest.readthedocs.io/en/latest/
project_urls =
    Bug Reports = https://github.com/tmarktaylor/phmutest/issues
    Source = https://github.com/tmarktaylor/phmutest/
classifiers =
    Development Status :: 4 - Beta
    Environment :: Console
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: Implementation :: PyPy
    Topic :: Software Development :: Documentation
    Topic :: Software Development :: Libraries :: Python Modules
    Topic :: Software Development :: Quality Assurance
    Topic :: Software Development :: Testing
keywords =
    documentation
    markdown
    testing

[options]
zip_safe = False
package_dir =
    = src
packages = find:
python_requires = >=3.8
install_requires =
    tomli >= 1.0.0 ; python_version < "3.11"


[options.packages.find]
where = src

[options.package_data]
phmutest = py.typed

# see setup.py
# [options.entry_points]
# console_scripts =
#    phmutest = phmutest.main:main

[bdist_wheel]
# This flag says to generate wheels that support both Python 2 and Python
# 3. If your code will not run unchanged on both Python 2 and 3, you will
# need to generate separate wheels for each Python version that you
# support. Removing this line (or setting universal to 0) will prevent
# bdist_wheel from trying to make a universal wheel. For more see:
# https://packaging.python.org/guides/distributing-packages-using-setuptools/#wheels
universal=0

# Configurations for external tools.

[flake8]
exclude = doc, tests
max-line-length = 88
extend-ignore = E203

[coverage:run]
branch = True
source = src
